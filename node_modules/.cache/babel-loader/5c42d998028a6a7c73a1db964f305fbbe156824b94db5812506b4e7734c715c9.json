{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\project for stellar\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const useApp = () => {\n  _s();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within AppProvider');\n  }\n  return context;\n};\n_s(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState({\n    name: 'John Doe',\n    email: 'john@example.com',\n    verified: true,\n    totalDonated: 2500,\n    campaignsSupported: 8,\n    impactScore: 92\n  });\n  const [campaigns, setCampaigns] = useState([{\n    id: 1,\n    title: 'Clean Water for Rural Communities',\n    category: 'Charity',\n    description: 'Providing clean water access to underserved communities',\n    raised: 75000,\n    goal: 100000,\n    beneficiary: 'WaterAid Foundation',\n    verified: true,\n    image: 'https://via.placeholder.com/300x200',\n    milestones: [{\n      id: 1,\n      title: 'Site Assessment',\n      status: 'Complete',\n      date: '2024-01-15'\n    }, {\n      id: 2,\n      title: 'Well Drilling',\n      status: 'Under Review',\n      date: '2024-02-01'\n    }, {\n      id: 3,\n      title: 'Water Testing',\n      status: 'Pending',\n      date: '2024-02-15'\n    }]\n  }, {\n    id: 2,\n    title: 'Disaster Relief - Hurricane Victims',\n    category: 'Disaster Relief',\n    description: 'Emergency aid for families affected by recent hurricane',\n    raised: 45000,\n    goal: 80000,\n    beneficiary: 'Red Cross Emergency',\n    verified: true,\n    image: 'https://via.placeholder.com/300x200',\n    milestones: [{\n      id: 1,\n      title: 'Emergency Response',\n      status: 'Complete',\n      date: '2024-01-10'\n    }, {\n      id: 2,\n      title: 'Shelter Setup',\n      status: 'Complete',\n      date: '2024-01-12'\n    }, {\n      id: 3,\n      title: 'Long-term Housing',\n      status: 'Under Review',\n      date: '2024-02-01'\n    }]\n  }, {\n    id: 3,\n    title: 'EcoTech Startup - Solar Innovation',\n    category: 'Startup',\n    description: 'Revolutionary solar panel technology for affordable energy',\n    raised: 120000,\n    goal: 200000,\n    beneficiary: 'EcoTech Solutions',\n    verified: true,\n    image: 'https://via.placeholder.com/300x200',\n    milestones: [{\n      id: 1,\n      title: 'Prototype Development',\n      status: 'Complete',\n      date: '2024-01-05'\n    }, {\n      id: 2,\n      title: 'Testing Phase',\n      status: 'Complete',\n      date: '2024-01-20'\n    }, {\n      id: 3,\n      title: 'Manufacturing Setup',\n      status: 'Under Review',\n      date: '2024-02-10'\n    }]\n  }]);\n  const [userDonations, setUserDonations] = useState([{\n    id: 1,\n    campaignId: 1,\n    amount: 500,\n    date: '2024-01-20'\n  }, {\n    id: 2,\n    campaignId: 2,\n    amount: 300,\n    date: '2024-01-18'\n  }, {\n    id: 3,\n    campaignId: 3,\n    amount: 1000,\n    date: '2024-01-15'\n  }]);\n  const [notifications, setNotifications] = useState([]);\n\n  // Mock real-time updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCampaigns(prev => prev.map(campaign => ({\n        ...campaign,\n        raised: campaign.raised + Math.floor(Math.random() * 100)\n      })));\n    }, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  const addDonation = (campaignId, amount) => {\n    const newDonation = {\n      id: userDonations.length + 1,\n      campaignId,\n      amount,\n      date: new Date().toISOString().split('T')[0]\n    };\n    setUserDonations(prev => [...prev, newDonation]);\n    setCampaigns(prev => prev.map(campaign => campaign.id === campaignId ? {\n      ...campaign,\n      raised: campaign.raised + amount\n    } : campaign));\n    setUser(prev => ({\n      ...prev,\n      totalDonated: prev.totalDonated + amount,\n      campaignsSupported: prev.campaignsSupported + (userDonations.find(d => d.campaignId === campaignId) ? 0 : 1)\n    }));\n  };\n  const value = {\n    user,\n    campaigns,\n    userDonations,\n    notifications,\n    addDonation,\n    setUser,\n    setCampaigns\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s2(AppProvider, \"3/Y/yBbDp17KpR1eFrTSFA+LICU=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AppContext","useApp","_s","context","Error","AppProvider","children","_s2","user","setUser","name","email","verified","totalDonated","campaignsSupported","impactScore","campaigns","setCampaigns","id","title","category","description","raised","goal","beneficiary","image","milestones","status","date","userDonations","setUserDonations","campaignId","amount","notifications","setNotifications","interval","setInterval","prev","map","campaign","Math","floor","random","clearInterval","addDonation","newDonation","length","Date","toISOString","split","find","d","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/project for stellar/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const useApp = () => {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useApp must be used within AppProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [user, setUser] = useState({\r\n    name: 'John Doe',\r\n    email: 'john@example.com',\r\n    verified: true,\r\n    totalDonated: 2500,\r\n    campaignsSupported: 8,\r\n    impactScore: 92\r\n  });\r\n\r\n  const [campaigns, setCampaigns] = useState([\r\n    {\r\n      id: 1,\r\n      title: 'Clean Water for Rural Communities',\r\n      category: 'Charity',\r\n      description: 'Providing clean water access to underserved communities',\r\n      raised: 75000,\r\n      goal: 100000,\r\n      beneficiary: 'WaterAid Foundation',\r\n      verified: true,\r\n      image: 'https://via.placeholder.com/300x200',\r\n      milestones: [\r\n        { id: 1, title: 'Site Assessment', status: 'Complete', date: '2024-01-15' },\r\n        { id: 2, title: 'Well Drilling', status: 'Under Review', date: '2024-02-01' },\r\n        { id: 3, title: 'Water Testing', status: 'Pending', date: '2024-02-15' }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Disaster Relief - Hurricane Victims',\r\n      category: 'Disaster Relief',\r\n      description: 'Emergency aid for families affected by recent hurricane',\r\n      raised: 45000,\r\n      goal: 80000,\r\n      beneficiary: 'Red Cross Emergency',\r\n      verified: true,\r\n      image: 'https://via.placeholder.com/300x200',\r\n      milestones: [\r\n        { id: 1, title: 'Emergency Response', status: 'Complete', date: '2024-01-10' },\r\n        { id: 2, title: 'Shelter Setup', status: 'Complete', date: '2024-01-12' },\r\n        { id: 3, title: 'Long-term Housing', status: 'Under Review', date: '2024-02-01' }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'EcoTech Startup - Solar Innovation',\r\n      category: 'Startup',\r\n      description: 'Revolutionary solar panel technology for affordable energy',\r\n      raised: 120000,\r\n      goal: 200000,\r\n      beneficiary: 'EcoTech Solutions',\r\n      verified: true,\r\n      image: 'https://via.placeholder.com/300x200',\r\n      milestones: [\r\n        { id: 1, title: 'Prototype Development', status: 'Complete', date: '2024-01-05' },\r\n        { id: 2, title: 'Testing Phase', status: 'Complete', date: '2024-01-20' },\r\n        { id: 3, title: 'Manufacturing Setup', status: 'Under Review', date: '2024-02-10' }\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const [userDonations, setUserDonations] = useState([\r\n    { id: 1, campaignId: 1, amount: 500, date: '2024-01-20' },\r\n    { id: 2, campaignId: 2, amount: 300, date: '2024-01-18' },\r\n    { id: 3, campaignId: 3, amount: 1000, date: '2024-01-15' }\r\n  ]);\r\n\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  // Mock real-time updates\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCampaigns(prev => prev.map(campaign => ({\r\n        ...campaign,\r\n        raised: campaign.raised + Math.floor(Math.random() * 100)\r\n      })));\r\n    }, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const addDonation = (campaignId, amount) => {\r\n    const newDonation = {\r\n      id: userDonations.length + 1,\r\n      campaignId,\r\n      amount,\r\n      date: new Date().toISOString().split('T')[0]\r\n    };\r\n    setUserDonations(prev => [...prev, newDonation]);\r\n    \r\n    setCampaigns(prev => prev.map(campaign => \r\n      campaign.id === campaignId \r\n        ? { ...campaign, raised: campaign.raised + amount }\r\n        : campaign\r\n    ));\r\n\r\n    setUser(prev => ({\r\n      ...prev,\r\n      totalDonated: prev.totalDonated + amount,\r\n      campaignsSupported: prev.campaignsSupported + (userDonations.find(d => d.campaignId === campaignId) ? 0 : 1)\r\n    }));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    campaigns,\r\n    userDonations,\r\n    notifications,\r\n    addDonation,\r\n    setUser,\r\n    setCampaigns\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}